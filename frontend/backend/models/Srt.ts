/* tslint:disable */
/* eslint-disable */
/**
 * live-cmaf-transcoder
 * API for the Live CMAF Transcoder
 *
 * The version of the OpenAPI document: 0.1.52
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SRTMode } from './SRTMode';
import {
    SRTModeFromJSON,
    SRTModeFromJSONTyped,
    SRTModeToJSON,
    SRTModeToJSONTyped,
} from './SRTMode';

/**
 * 
 * @export
 * @interface Srt
 */
export interface Srt {
    /**
     * 
     * @type {number}
     * @memberof Srt
     */
    connectTimeoutMs: number;
    /**
     * 
     * @type {SRTMode}
     * @memberof Srt
     */
    mode: SRTMode;
    /**
     * 
     * @type {string}
     * @memberof Srt
     */
    uri: string;
}



/**
 * Check if a given object implements the Srt interface.
 */
export function instanceOfSrt(value: object): value is Srt {
    if (!('connectTimeoutMs' in value) || value['connectTimeoutMs'] === undefined) return false;
    if (!('mode' in value) || value['mode'] === undefined) return false;
    if (!('uri' in value) || value['uri'] === undefined) return false;
    return true;
}

export function SrtFromJSON(json: any): Srt {
    return SrtFromJSONTyped(json, false);
}

export function SrtFromJSONTyped(json: any, ignoreDiscriminator: boolean): Srt {
    if (json == null) {
        return json;
    }
    return {
        
        'connectTimeoutMs': json['connect_timeout_ms'],
        'mode': SRTModeFromJSON(json['mode']),
        'uri': json['uri'],
    };
}

  export function SrtToJSON(json: any): Srt {
      return SrtToJSONTyped(json, false);
  }

  export function SrtToJSONTyped(value?: Srt | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'connect_timeout_ms': value['connectTimeoutMs'],
        'mode': SRTModeToJSON(value['mode']),
        'uri': value['uri'],
    };
}

