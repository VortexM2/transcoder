/* tslint:disable */
/* eslint-disable */
/**
 * live-cmaf-transcoder
 * API for the Live CMAF Transcoder
 *
 * The version of the OpenAPI document: 0.1.63
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TextPosition } from './TextPosition';
import {
    TextPositionFromJSON,
    TextPositionFromJSONTyped,
    TextPositionToJSON,
    TextPositionToJSONTyped,
} from './TextPosition';

/**
 * 
 * @export
 * @interface VideoFilterDrawText
 */
export interface VideoFilterDrawText {
    /**
     * 
     * @type {string}
     * @memberof VideoFilterDrawText
     */
    color: string;
    /**
     * 
     * @type {boolean}
     * @memberof VideoFilterDrawText
     */
    enabled: boolean;
    /**
     * 
     * @type {number}
     * @memberof VideoFilterDrawText
     */
    fontsize: number;
    /**
     * 
     * @type {TextPosition}
     * @memberof VideoFilterDrawText
     */
    position: TextPosition;
    /**
     * 
     * @type {string}
     * @memberof VideoFilterDrawText
     */
    text: string;
}



/**
 * Check if a given object implements the VideoFilterDrawText interface.
 */
export function instanceOfVideoFilterDrawText(value: object): value is VideoFilterDrawText {
    if (!('color' in value) || value['color'] === undefined) return false;
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    if (!('fontsize' in value) || value['fontsize'] === undefined) return false;
    if (!('position' in value) || value['position'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function VideoFilterDrawTextFromJSON(json: any): VideoFilterDrawText {
    return VideoFilterDrawTextFromJSONTyped(json, false);
}

export function VideoFilterDrawTextFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoFilterDrawText {
    if (json == null) {
        return json;
    }
    return {
        
        'color': json['color'],
        'enabled': json['enabled'],
        'fontsize': json['fontsize'],
        'position': TextPositionFromJSON(json['position']),
        'text': json['text'],
    };
}

  export function VideoFilterDrawTextToJSON(json: any): VideoFilterDrawText {
      return VideoFilterDrawTextToJSONTyped(json, false);
  }

  export function VideoFilterDrawTextToJSONTyped(value?: VideoFilterDrawText | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'color': value['color'],
        'enabled': value['enabled'],
        'fontsize': value['fontsize'],
        'position': TextPositionToJSON(value['position']),
        'text': value['text'],
    };
}

